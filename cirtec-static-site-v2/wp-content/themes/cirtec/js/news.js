const loader =
  '<div class="loader-wrapper"><div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>';

const wrapper = document.querySelector(".results .posts");

// Handling filter submission
// - Serializes the text input fields from the form
// - Creates a new URL removing the query string
// - Adds new query string to URL
// - Pushes new URL to the browser history
// = Runs the query
// - Handles filtering from page/2/
// - Handles multiple values for same key

jQuery("#gform_5 select").change(function () {
  wrapper.innerHTML = loader;
  submitForm();
});

// jQuery("#filter-form #s").keyup(function () {
//   wrapper.innerHTML = loader;
//   submitForm();
// });

// Submits the form
function submitForm() {
  var raw = jQuery("#gform_5").serializeArray();
  var queryIndex = window.location.href.indexOf("?");
  var href;
  var url;

  // manually enter filterable data
  const data = [
    { name: "news-category", value: raw[0].value },
    { name: "news-tags", value: raw[1].value },
  ];

  href =
    queryIndex != -1
      ? window.location.href.substring(0, queryIndex)
      : (href = window.location.href);

  // remove page number
  href = href.replace(/page\/[0-9]+\//, "");

  url = new URL(href);

  jQuery.each(data, function (i, val) {
    if (val.value !== "all_tags" && val.value !== "all_news") {
      if (!url.searchParams.get(val.name)) {
        url.searchParams.set(val.name, val.value);
      } else {
        const lastValue = url.searchParams.get(val.name);
        url.searchParams.set(val.name, `${lastValue},${val.value}`);
      }
    }
  });

  history.pushState("", document.title, url);

  do_query(url);
}

// AJAX
// - Stops the previous query if one exists
// - Retrieves the HTML from the page generated by the new URL
var last_query;
function do_query(url) {
  if (last_query) {
    last_query.abort();
  }
  last_query = jQuery.get(
    url,
    {},
    function (html) {
      update_page(html);
    },
    "html"
  );
}

// Updates the page based on the HTML retrieved from the new URL
function update_page(html) {
  locStart = html.indexOf('<div class="posts-start"></div>');
  locEnd = html.indexOf('<div class="posts-end"></div>');
  newLoc = html.substr(locStart, locEnd - locStart);

  jQuery(".results .posts")
    .empty()
    .append(newLoc)
    .append('<div class="posts-end"></div>');

  initPagination();

  $archive = document.querySelector("#page .archive");
  const header = _get("header");

  jQuery("body,html").animate(
    { scrollTop: jQuery($archive).offset().top - header.clientHeight },
    500
  );

  document.querySelector("#page .posts").scrollIntoView();
}

function initPagination() {
  jQuery("#archive nav a").click(function (e) {
    e.preventDefault();
    url = jQuery(this).attr("href");
    history.pushState("", document.title, url);
    do_query(url);
  });
}

// clicks all the filters based on the url
const handleUIOnLoad = (() => {
  // replace the ? with a & and split them up by &
  const search = window.location.search.replace("?", "&").split("&");
  let terms = [];

  // loop them and split key from value
  search.forEach((pair) => {
    const temp = pair.split("=");

    if (pair !== "") {
      terms.push({ name: temp[0], value: temp[1] });
    }
  });

  // loop terms, grab input and click it if it isnt already checked
  terms.forEach(({ name, value }) => {
    const values = value.split("%2C");

    values.forEach((value) => {
      const target = document.querySelector(`input[name="${name}"].${value}`);
      if (target && !target.checked) target.click();
    });
  });
})();
